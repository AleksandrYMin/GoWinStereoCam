/*
Copyright (c) 2020, Raspberry Pi Foundation
Copyright (c) 2020, Dave Stevenson
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the copyright holder nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef IMX477MODES_H_
#define IMX477MODES_H_

// clang-format off
// We want to preserve 1 register per line.

struct sensor_regs imx477_common_init[] = {
    {0x0100, 0x00},
    {0x0136, 0x18},
    {0x0137, 0x00},
    {0xe000, 0x00},
    {0xe07a, 0x01},
    {0x0808, 0x02},
    {0x4AE9, 0x18},
    {0x4AEA, 0x08},
    {0xF61C, 0x04},
    {0xF61E, 0x04},
    {0x4AE9, 0x21},
    {0x4AEA, 0x80},
    {0x38a8, 0x1F},
    {0x38a9, 0xFF},
    {0x38aa, 0x1F},
    {0x38ab, 0xFF},
    {0x55d4, 0x00},
    {0x55d5, 0x00},
    {0x55d6, 0x07},
    {0x55d7, 0xFF},
    {0x55e8, 0x07},
    {0x55e9, 0xFF},
    {0x55ea, 0x00},
    {0x55eb, 0x00},
    {0x574c, 0x07},
    {0x574d, 0xFF},
    {0x574e, 0x00},
    {0x574f, 0x00},
    {0x5754, 0x00},
    {0x5755, 0x00},
    {0x5756, 0x07},
    {0x5757, 0xFF},
    {0x5973, 0x04},
    {0x5974, 0x01},
    {0x5d13, 0xC3},
    {0x5d14, 0x58},
    {0x5d15, 0xA3},
    {0x5d16, 0x1D},
    {0x5d17, 0x65},
    {0x5d18, 0x8C},
    {0x5d1a, 0x06},
    {0x5d1b, 0xA9},
    {0x5d1c, 0x45},
    {0x5d1d, 0x3A},
    {0x5d1e, 0xAB},
    {0x5d1f, 0x15},
    {0x5d21, 0x0E},
    {0x5d22, 0x52},
    {0x5d23, 0xAA},
    {0x5d24, 0x7D},
    {0x5d25, 0x57},
    {0x5d26, 0xA8},
    {0x5d37, 0x5A},
    {0x5d38, 0x5A},
    {0x5d77, 0x7F},
    {0x7B75, 0x0E},
    {0x7B76, 0x0B},
    {0x7B77, 0x08},
    {0x7B78, 0x0A},
    {0x7B79, 0x47},
    {0x7B7C, 0x00},
    {0x7B7D, 0x00},
    {0x8D1F, 0x00},
    {0x8D27, 0x00},
    {0x9004, 0x03},
    {0x9200, 0x50},
    {0x9201, 0x6C},
    {0x9202, 0x71},
    {0x9203, 0x00},
    {0x9204, 0x71},
    {0x9205, 0x01},
    {0x9371, 0x6A},
    {0x9373, 0x6A},
    {0x9375, 0x64},
    {0x991A, 0x00},
    {0x996B, 0x8C},
    {0x996C, 0x64},
    {0x996D, 0x50},
    {0x9A4C, 0x0D},
    {0x9A4D, 0x0D},
    {0xA001, 0x0A},
    {0xA003, 0x0A},
    {0xA005, 0x0A},
    {0xA006, 0x01},
    {0xA007, 0xC0},
    {0xA009, 0xC0},
    {0x3D8A, 0x01},
    {0x4421, 0x04},
    {0x7B3B, 0x01},
    {0x7B4C, 0x00},
    {0x9905, 0x00},
    {0x9907, 0x00},
    {0x9909, 0x00},
    {0x990B, 0x00},
    {0x9944, 0x3C},
    {0x9947, 0x3C},
    {0x994A, 0x8C},
    {0x994B, 0x50},
    {0x994C, 0x1B},
    {0x994D, 0x8C},
    {0x994E, 0x50},
    {0x994F, 0x1B},
    {0x9950, 0x8C},
    {0x9951, 0x1B},
    {0x9952, 0x0A},
    {0x9953, 0x8C},
    {0x9954, 0x1B},
    {0x9955, 0x0A},
    {0x9A13, 0x04},
    {0x9A14, 0x04},
    {0x9A19, 0x00},
    {0x9A1C, 0x04},
    {0x9A1D, 0x04},
    {0x9A26, 0x05},
    {0x9A27, 0x05},
    {0x9A2C, 0x01},
    {0x9A2D, 0x03},
    {0x9A2F, 0x05},
    {0x9A30, 0x05},
    {0x9A41, 0x00},
    {0x9A46, 0x00},
    {0x9A47, 0x00},
    {0x9C17, 0x35},
    {0x9C1D, 0x31},
    {0x9C29, 0x50},
    {0x9C3B, 0x2F},
    {0x9C41, 0x6B},
    {0x9C47, 0x2D},
    {0x9C4D, 0x40},
    {0x9C6B, 0x00},
    {0x9C71, 0xC8},
    {0x9C73, 0x32},
    {0x9C75, 0x04},
    {0x9C7D, 0x2D},
    {0x9C83, 0x40},
    {0x9C94, 0x3F},
    {0x9C95, 0x3F},
    {0x9C96, 0x3F},
    {0x9C97, 0x00},
    {0x9C98, 0x00},
    {0x9C99, 0x00},
    {0x9C9A, 0x3F},
    {0x9C9B, 0x3F},
    {0x9C9C, 0x3F},
    {0x9CA0, 0x0F},
    {0x9CA1, 0x0F},
    {0x9CA2, 0x0F},
    {0x9CA3, 0x00},
    {0x9CA4, 0x00},
    {0x9CA5, 0x00},
    {0x9CA6, 0x1E},
    {0x9CA7, 0x1E},
    {0x9CA8, 0x1E},
    {0x9CA9, 0x00},
    {0x9CAA, 0x00},
    {0x9CAB, 0x00},
    {0x9CAC, 0x09},
    {0x9CAD, 0x09},
    {0x9CAE, 0x09},
    {0x9CBD, 0x50},
    {0x9CBF, 0x50},
    {0x9CC1, 0x50},
    {0x9CC3, 0x40},
    {0x9CC5, 0x40},
    {0x9CC7, 0x40},
    {0x9CC9, 0x0A},
    {0x9CCB, 0x0A},
    {0x9CCD, 0x0A},
    {0x9D17, 0x35},
    {0x9D1D, 0x31},
    {0x9D29, 0x50},
    {0x9D3B, 0x2F},
    {0x9D41, 0x6B},
    {0x9D47, 0x42},
    {0x9D4D, 0x5A},
    {0x9D6B, 0x00},
    {0x9D71, 0xC8},
    {0x9D73, 0x32},
    {0x9D75, 0x04},
    {0x9D7D, 0x42},
    {0x9D83, 0x5A},
    {0x9D94, 0x3F},
    {0x9D95, 0x3F},
    {0x9D96, 0x3F},
    {0x9D97, 0x00},
    {0x9D98, 0x00},
    {0x9D99, 0x00},
    {0x9D9A, 0x3F},
    {0x9D9B, 0x3F},
    {0x9D9C, 0x3F},
    {0x9D9D, 0x1F},
    {0x9D9E, 0x1F},
    {0x9D9F, 0x1F},
    {0x9DA0, 0x0F},
    {0x9DA1, 0x0F},
    {0x9DA2, 0x0F},
    {0x9DA3, 0x00},
    {0x9DA4, 0x00},
    {0x9DA5, 0x00},
    {0x9DA6, 0x1E},
    {0x9DA7, 0x1E},
    {0x9DA8, 0x1E},
    {0x9DA9, 0x00},
    {0x9DAA, 0x00},
    {0x9DAB, 0x00},
    {0x9DAC, 0x09},
    {0x9DAD, 0x09},
    {0x9DAE, 0x09},
    {0x9DC9, 0x0A},
    {0x9DCB, 0x0A},
    {0x9DCD, 0x0A},
    {0x9E17, 0x35},
    {0x9E1D, 0x31},
    {0x9E29, 0x50},
    {0x9E3B, 0x2F},
    {0x9E41, 0x6B},
    {0x9E47, 0x2D},
    {0x9E4D, 0x40},
    {0x9E6B, 0x00},
    {0x9E71, 0xC8},
    {0x9E73, 0x32},
    {0x9E75, 0x04},
    {0x9E94, 0x0F},
    {0x9E95, 0x0F},
    {0x9E96, 0x0F},
    {0x9E97, 0x00},
    {0x9E98, 0x00},
    {0x9E99, 0x00},
    {0x9EA0, 0x0F},
    {0x9EA1, 0x0F},
    {0x9EA2, 0x0F},
    {0x9EA3, 0x00},
    {0x9EA4, 0x00},
    {0x9EA5, 0x00},
    {0x9EA6, 0x3F},
    {0x9EA7, 0x3F},
    {0x9EA8, 0x3F},
    {0x9EA9, 0x00},
    {0x9EAA, 0x00},
    {0x9EAB, 0x00},
    {0x9EAC, 0x09},
    {0x9EAD, 0x09},
    {0x9EAE, 0x09},
    {0x9EC9, 0x0A},
    {0x9ECB, 0x0A},
    {0x9ECD, 0x0A},
    {0x9F17, 0x35},
    {0x9F1D, 0x31},
    {0x9F29, 0x50},
    {0x9F3B, 0x2F},
    {0x9F41, 0x6B},
    {0x9F47, 0x42},
    {0x9F4D, 0x5A},
    {0x9F6B, 0x00},
    {0x9F71, 0xC8},
    {0x9F73, 0x32},
    {0x9F75, 0x04},
    {0x9F94, 0x0F},
    {0x9F95, 0x0F},
    {0x9F96, 0x0F},
    {0x9F97, 0x00},
    {0x9F98, 0x00},
    {0x9F99, 0x00},
    {0x9F9A, 0x2F},
    {0x9F9B, 0x2F},
    {0x9F9C, 0x2F},
    {0x9F9D, 0x00},
    {0x9F9E, 0x00},
    {0x9F9F, 0x00},
    {0x9FA0, 0x0F},
    {0x9FA1, 0x0F},
    {0x9FA2, 0x0F},
    {0x9FA3, 0x00},
    {0x9FA4, 0x00},
    {0x9FA5, 0x00},
    {0x9FA6, 0x1E},
    {0x9FA7, 0x1E},
    {0x9FA8, 0x1E},
    {0x9FA9, 0x00},
    {0x9FAA, 0x00},
    {0x9FAB, 0x00},
    {0x9FAC, 0x09},
    {0x9FAD, 0x09},
    {0x9FAE, 0x09},
    {0x9FC9, 0x0A},
    {0x9FCB, 0x0A},
    {0x9FCD, 0x0A},
    {0xA14B, 0xFF},
    {0xA151, 0x0C},
    {0xA153, 0x50},
    {0xA155, 0x02},
    {0xA157, 0x00},
    {0xA1AD, 0xFF},
    {0xA1B3, 0x0C},
    {0xA1B5, 0x50},
    {0xA1B9, 0x00},
    {0xA24B, 0xFF},
    {0xA257, 0x00},
    {0xA2AD, 0xFF},
    {0xA2B9, 0x00},
    {0xB21F, 0x04},
    {0xB35C, 0x00},
    {0xB35E, 0x08},
    {0x0112, 0x0C},
    {0x0113, 0x0C},
    {0x0114, 0x01},
    {0x0350, 0x00},
    {0xBCF1, 0x02},
};

// 12 mpix 10fps
struct sensor_regs imx477_4056x3040_regs[] = {
    {0x0342, 0x5d},
    {0x0343, 0xc0},
    {0x0344, 0x00},
    {0x0345, 0x00},
    {0x0346, 0x00},
    {0x0347, 0x00},
    {0x0348, 0x0f},
    {0x0349, 0xd7},
    {0x034a, 0x0b},
    {0x034b, 0xdf},
    {0x00e3, 0x00},
    {0x00e4, 0x00},
    {0x00fc, 0x0a},
    {0x00fd, 0x0a},
    {0x00fe, 0x0a},
    {0x00ff, 0x0a},
    {0x0220, 0x00},
    {0x0221, 0x11},
    {0x0381, 0x01},
    {0x0383, 0x01},
    {0x0385, 0x01},
    {0x0387, 0x01},
    {0x0900, 0x00},
    {0x0901, 0x11},
    {0x0902, 0x02},
    {0x3140, 0x02},
    {0x3c00, 0x00},
    {0x3c01, 0x03},
    {0x3c02, 0xa2},
    {0x3f0d, 0x01},
    {0x5748, 0x07},
    {0x5749, 0xff},
    {0x574a, 0x00},
    {0x574b, 0x00},
    {0x7b75, 0x0a},
    {0x7b76, 0x0c},
    {0x7b77, 0x07},
    {0x7b78, 0x06},
    {0x7b79, 0x3c},
    {0x7b53, 0x01},
    {0x9369, 0x5a},
    {0x936b, 0x55},
    {0x936d, 0x28},
    {0x9304, 0x00},
    {0x9305, 0x00},
    {0x9e9a, 0x2f},
    {0x9e9b, 0x2f},
    {0x9e9c, 0x2f},
    {0x9e9d, 0x00},
    {0x9e9e, 0x00},
    {0x9e9f, 0x00},
    {0xa2a9, 0x60},
    {0xa2b7, 0x00},
    {0x0401, 0x00},
    {0x0404, 0x00},
    {0x0405, 0x10},
    {0x0408, 0x00},
    {0x0409, 0x00},
    {0x040a, 0x00},
    {0x040b, 0x00},
    {0x040c, 0x0f},
    {0x040d, 0xd8},
    {0x040e, 0x0b},
    {0x040f, 0xe0},
    {0x034c, 0x0f},
    {0x034d, 0xd8},
    {0x034e, 0x0b},
    {0x034f, 0xe0},
    {0x0301, 0x05},
    {0x0303, 0x02},
    {0x0305, 0x04},
    {0x0306, 0x01},
    {0x0307, 0x5e},
    {0x0309, 0x0c},
    {0x030b, 0x02},
    {0x030d, 0x02},
    {0x030e, 0x00},
    {0x030f, 0x96},
    {0x0310, 0x01},
    {0x0820, 0x07},
    {0x0821, 0x08},
    {0x0822, 0x00},
    {0x0823, 0x00},
    {0x080a, 0x00},
    {0x080b, 0x7f},
    {0x080c, 0x00},
    {0x080d, 0x4f},
    {0x080e, 0x00},
    {0x080f, 0x77},
    {0x0810, 0x00},
    {0x0811, 0x5f},
    {0x0812, 0x00},
    {0x0813, 0x57},
    {0x0814, 0x00},
    {0x0815, 0x4f},
    {0x0816, 0x01},
    {0x0817, 0x27},
    {0x0818, 0x00},
    {0x0819, 0x3f},
    {0xe04c, 0x00},
    {0xe04d, 0x7f},
    {0xe04e, 0x00},
    {0xe04f, 0x1f},
    {0x3e20, 0x01},
    {0x3e37, 0x00},
    {0x3f50, 0x00},
    {0x3f56, 0x02},
    {0x3f57, 0xae},
    {0x0101, 0x00},
    {0x0202, 0x0b},
    {0x0203, 0x80},
    {0x0204, 0x00},
    {0x0205, 0x00},
    {0x0340, 0x0c},
    {0x0341, 0x00},
    {0x0100, 0x01},
};

// 2x2 binned. 40fps
struct sensor_regs imx477_2028x1520_regs[] = {
    {0x0342, 0x31},
    {0x0343, 0xc4},
    {0x0344, 0x00},
    {0x0345, 0x00},
    {0x0346, 0x00},
    {0x0347, 0x00},
    {0x0348, 0x0f},
    {0x0349, 0xd7},
    {0x034a, 0x0b},
    {0x034b, 0xdf},
    {0x0220, 0x00},
    {0x0221, 0x11},
    {0x0381, 0x01},
    {0x0383, 0x01},
    {0x0385, 0x01},
    {0x0387, 0x01},
    {0x0900, 0x01},
    {0x0901, 0x12},
    {0x0902, 0x02},
    {0x3140, 0x02},
    {0x3c00, 0x00},
    {0x3c01, 0x03},
    {0x3c02, 0xa2},
    {0x3f0d, 0x01},
    {0x5748, 0x07},
    {0x5749, 0xff},
    {0x574a, 0x00},
    {0x574b, 0x00},
    {0x7b53, 0x01},
    {0x9369, 0x73},
    {0x936b, 0x64},
    {0x936d, 0x5f},
    {0x9304, 0x00},
    {0x9305, 0x00},
    {0x9e9a, 0x2f},
    {0x9e9b, 0x2f},
    {0x9e9c, 0x2f},
    {0x9e9d, 0x00},
    {0x9e9e, 0x00},
    {0x9e9f, 0x00},
    {0xa2a9, 0x60},
    {0xa2b7, 0x00},
    {0x0401, 0x01},
    {0x0404, 0x00},
    {0x0405, 0x20},
    {0x0408, 0x00},
    {0x0409, 0x00},
    {0x040a, 0x00},
    {0x040b, 0x00},
    {0x040c, 0x0f},
    {0x040d, 0xd8},
    {0x040e, 0x0b},
    {0x040f, 0xe0},
    {0x034c, 0x07},
    {0x034d, 0xec},
    {0x034e, 0x05},
    {0x034f, 0xf0},
    {0x0301, 0x05},
    {0x0303, 0x02},
    {0x0305, 0x04},
    {0x0306, 0x01},
    {0x0307, 0x5e},
    {0x0309, 0x0c},
    {0x030b, 0x02},
    {0x030d, 0x02},
    {0x030e, 0x00},
    {0x030f, 0x96},
    {0x0310, 0x01},
    {0x0820, 0x07},
    {0x0821, 0x08},
    {0x0822, 0x00},
    {0x0823, 0x00},
    {0x080a, 0x00},
    {0x080b, 0x7f},
    {0x080c, 0x00},
    {0x080d, 0x4f},
    {0x080e, 0x00},
    {0x080f, 0x77},
    {0x0810, 0x00},
    {0x0811, 0x5f},
    {0x0812, 0x00},
    {0x0813, 0x57},
    {0x0814, 0x00},
    {0x0815, 0x4f},
    {0x0816, 0x01},
    {0x0817, 0x27},
    {0x0818, 0x00},
    {0x0819, 0x3f},
    {0xe04c, 0x00},
    {0xe04d, 0x7f},
    {0xe04e, 0x00},
    {0xe04f, 0x1f},
    {0x3e20, 0x01},
    {0x3e37, 0x00},
    {0x3f50, 0x00},
    {0x3f56, 0x01},
    {0x3f57, 0x6c},
    {0x0101, 0x00},
    {0x0202, 0x05},
    {0x0203, 0xf0},
    {0x0204, 0x00},
    {0x0205, 0x00},
    {0x0340, 0x06},
    {0x0341, 0x20},
    {0x0100, 0x01},
};

// 1080p cropped mode
struct sensor_regs imx477_2028x1080_regs[] = {
    {0x0342, 0x31},
    {0x0343, 0xc4},
    {0x0344, 0x00},
    {0x0345, 0x00},
    {0x0346, 0x01},
    {0x0347, 0xb8},
    {0x0348, 0x0f},
    {0x0349, 0xd7},
    {0x034a, 0x0a},
    {0x034b, 0x27},
    {0x0220, 0x00},
    {0x0221, 0x11},
    {0x0381, 0x01},
    {0x0383, 0x01},
    {0x0385, 0x01},
    {0x0387, 0x01},
    {0x0900, 0x01},
    {0x0901, 0x12},
    {0x0902, 0x02},
    {0x3140, 0x02},
    {0x3c00, 0x00},
    {0x3c01, 0x03},
    {0x3c02, 0xa2},
    {0x3f0d, 0x01},
    {0x5748, 0x07},
    {0x5749, 0xff},
    {0x574a, 0x00},
    {0x574b, 0x00},
    {0x7b53, 0x01},
    {0x9369, 0x73},
    {0x936b, 0x64},
    {0x936d, 0x5f},
    {0x9304, 0x00},
    {0x9305, 0x00},
    {0x9e9a, 0x2f},
    {0x9e9b, 0x2f},
    {0x9e9c, 0x2f},
    {0x9e9d, 0x00},
    {0x9e9e, 0x00},
    {0x9e9f, 0x00},
    {0xa2a9, 0x60},
    {0xa2b7, 0x00},
    {0x0401, 0x01},
    {0x0404, 0x00},
    {0x0405, 0x20},
    {0x0408, 0x00},
    {0x0409, 0x00},
    {0x040a, 0x00},
    {0x040b, 0x00},
    {0x040c, 0x0f},
    {0x040d, 0xd8},
    {0x040e, 0x04},
    {0x040f, 0x38},
    {0x034c, 0x07},
    {0x034d, 0xec},
    {0x034e, 0x04},
    {0x034f, 0x38},
    {0x0301, 0x05},
    {0x0303, 0x02},
    {0x0305, 0x04},
    {0x0306, 0x01},
    {0x0307, 0x5e},
    {0x0309, 0x0c},
    {0x030b, 0x02},
    {0x030d, 0x02},
    {0x030e, 0x00},
    {0x030f, 0x96},
    {0x0310, 0x01},
    {0x0820, 0x07},
    {0x0821, 0x08},
    {0x0822, 0x00},
    {0x0823, 0x00},
    {0x080a, 0x00},
    {0x080b, 0x7f},
    {0x080c, 0x00},
    {0x080d, 0x4f},
    {0x080e, 0x00},
    {0x080f, 0x77},
    {0x0810, 0x00},
    {0x0811, 0x5f},
    {0x0812, 0x00},
    {0x0813, 0x57},
    {0x0814, 0x00},
    {0x0815, 0x4f},
    {0x0816, 0x01},
    {0x0817, 0x27},
    {0x0818, 0x00},
    {0x0819, 0x3f},
    {0xe04c, 0x00},
    {0xe04d, 0x7f},
    {0xe04e, 0x00},
    {0xe04f, 0x1f},
    {0x3e20, 0x01},
    {0x3e37, 0x00},
    {0x3f50, 0x00},
    {0x3f56, 0x01},
    {0x3f57, 0x6c},
    {0x0101, 0x00},
    {0x0202, 0x04},
    {0x0203, 0x40},
    {0x0204, 0x00},
    {0x0205, 0x00},
    {0x0340, 0x04},
    {0x0341, 0x6e},
    {0x0100, 0x01},
};

// 4x4 binned. 120fps
struct sensor_regs imx477_1012x760_regs[] = {
    {0x420b, 0x01},
    {0x990c, 0x00},
    {0x990d, 0x08},
    {0x9956, 0x8c},
    {0x9957, 0x64},
    {0x9958, 0x50},
    {0x9a48, 0x06},
    {0x9a49, 0x06},
    {0x9a4a, 0x06},
    {0x9a4b, 0x06},
    {0x9a4c, 0x06},
    {0x9a4d, 0x06},
    {0x0112, 0x0a},
    {0x0113, 0x0a},
    {0x0114, 0x01},
    {0x0342, 0x14},
    {0x0343, 0x60},
    {0x0344, 0x00},
    {0x0345, 0x00},
    {0x0346, 0x00},
    {0x0347, 0x00},
    {0x0348, 0x0f},
    {0x0349, 0xd3},
    {0x034a, 0x0b},
    {0x034b, 0xdf},
    {0x00e3, 0x00},
    {0x00e4, 0x00},
    {0x00fc, 0x0a},
    {0x00fd, 0x0a},
    {0x00fe, 0x0a},
    {0x00ff, 0x0a},
    {0x0220, 0x00},
    {0x0221, 0x11},
    {0x0381, 0x01},
    {0x0383, 0x01},
    {0x0385, 0x01},
    {0x0387, 0x03},
    {0x0900, 0x01},
    {0x0901, 0x22},
    {0x0902, 0x02},
    {0x3140, 0x02},
    {0x3c00, 0x00},
    {0x3c01, 0x01},
    {0x3c02, 0x9c},
    {0x3f0d, 0x00},
    {0x5748, 0x00},
    {0x5749, 0x00},
    {0x574a, 0x00},
    {0x574b, 0xa4},
    {0x7b75, 0x0e},
    {0x7b76, 0x09},
    {0x7b77, 0x08},
    {0x7b78, 0x06},
    {0x7b79, 0x34},
    {0x7b53, 0x00},
    {0x9369, 0x73},
    {0x936b, 0x64},
    {0x936d, 0x5f},
    {0x9304, 0x03},
    {0x9305, 0x80},
    {0x9e9a, 0x3f},
    {0x9e9b, 0x3f},
    {0x9e9c, 0x3f},
    {0x9e9d, 0x27},
    {0x9e9e, 0x27},
    {0x9e9f, 0x27},
    {0xa2a9, 0x27},
    {0xa2b7, 0x03},
    {0x0401, 0x01},
    {0x0404, 0x00},
    {0x0405, 0x20},
    {0x0408, 0x00},
    {0x0409, 0x00},
    {0x040a, 0x00},
    {0x040b, 0x00},
    {0x040c, 0x07},
    {0x040d, 0xea},
    {0x040e, 0x02},
    {0x040f, 0xf8},
    {0x034c, 0x03},
    {0x034d, 0xf4},
    {0x034e, 0x02},
    {0x034f, 0xf8},
    {0x0301, 0x05},
    {0x0303, 0x02},
    {0x0305, 0x02},
    {0x0306, 0x00},
    {0x0307, 0xaf},
    {0x0309, 0x0a},
    {0x030b, 0x02},
    {0x030d, 0x02},
    {0x030e, 0x00},
    {0x030f, 0x96},
    {0x0310, 0x01},
    {0x0820, 0x07},
    {0x0821, 0x08},
    {0x0822, 0x00},
    {0x0823, 0x00},
    {0x080a, 0x00},
    {0x080b, 0x6f},
    {0x080c, 0x00},
    {0x080d, 0x3f},
    {0x080e, 0x00},
    {0x080f, 0xff},
    {0x0810, 0x00},
    {0x0811, 0x4f},
    {0x0812, 0x00},
    {0x0813, 0x47},
    {0x0814, 0x00},
    {0x0815, 0x37},
    {0x0816, 0x00},
    {0x0817, 0xe7},
    {0x0818, 0x00},
    {0x0819, 0x2f},
    {0xe04c, 0x00},
    {0xe04d, 0x5f},
    {0xe04e, 0x00},
    {0xe04f, 0x1f},
    {0x3e20, 0x01},
    {0x3e37, 0x00},
    {0x3f50, 0x00},
    {0x3f56, 0x00},
    {0x3f57, 0x96},
    {0x0101, 0x00},
    {0x0202, 0x03},
    {0x0203, 0x00},
    {0x0204, 0x00},
    {0x0205, 0x00},
    {0x0340, 0x03},
    {0x0341, 0x2e},
    {0x0100, 0x01},
};

// clang-format on

struct mode_def imx477_modes[] = {
	{
	    .regs = imx477_4056x3040_regs,
	    .num_regs = NUM_ELEMENTS(imx477_4056x3040_regs),
	    .width = 4056,
	    .height = 3040,
	    .encoding = 0,
	    .order = BAYER_ORDER_RGGB,
	    .native_bit_depth = 12,
	    .image_id = 0x2C,
	    .data_lanes = 2,
	    .min_vts = 3072,
	    .line_time_ns = 0x5dc0,
	    .timing = { 0, 0, 0, 0, 0 },
	    .term = { 0, 0 },
	    .black_level = 256,
	},
	{
	    .regs = imx477_2028x1520_regs,
	    .num_regs = NUM_ELEMENTS(imx477_2028x1520_regs),
	    .width = 2028,
	    .height = 1520,
	    .encoding = 0,
	    .order = BAYER_ORDER_RGGB,
	    .native_bit_depth = 12,
	    .image_id = 0x2C,
	    .data_lanes = 2,
	    .min_vts = 1568,
	    .line_time_ns = 0x31c4,
	    .timing = { 0, 0, 0, 0, 0 },
	    .term = { 0, 0 },
	    .black_level = 256,
	},
	{
	    .regs = imx477_2028x1080_regs,
	    .num_regs = NUM_ELEMENTS(imx477_2028x1080_regs),
	    .width = 2028,
	    .height = 1080,
	    .encoding = 0,
	    .order = BAYER_ORDER_RGGB,
	    .native_bit_depth = 12,
	    .image_id = 0x2C,
	    .data_lanes = 2,
	    .min_vts = 1134,
	    .line_time_ns = 0x31c4,
	    .timing = { 0, 0, 0, 0, 0 },
	    .term = { 0, 0 },
	    .black_level = 256,
	},
	{
	    .regs = imx477_1012x760_regs,
	    .num_regs = NUM_ELEMENTS(imx477_1012x760_regs),
	    .width = 1012,
	    .height = 760,
	    .encoding = 0,
	    .order = BAYER_ORDER_RGGB,
	    .native_bit_depth = 10,
	    .image_id = 0x2B,
	    .data_lanes = 2,
	    .min_vts = 814,
	    .line_time_ns = 0x1460,
	    .timing = { 0, 0, 0, 0, 0 },
	    .term = { 0, 0 },
	    .black_level = 64,
	},
};

struct sensor_regs imx477_stop[] = {
	// to power down */
	{ 0x0100, 0x00 }, // disable streaming
};

struct sensor_def imx477 = {
	.name = "imx477",
	.common_init = imx477_common_init,
	.num_common_init = NUM_ELEMENTS(imx477_common_init),
	.modes = imx477_modes,
	.num_modes = NUM_ELEMENTS(imx477_modes),
	.stop = imx477_stop,
	.num_stop_regs = NUM_ELEMENTS(imx477_stop),

	.i2c_addr = 0x1A,
	.i2c_addressing = 2,
	.i2c_ident_length = 2,
	.i2c_ident_reg = 0x0016,
	.i2c_ident_value = 0x7704, // Bytes reversed

	.vflip_reg = 0x0101,
	.vflip_reg_bit = 1,
	.hflip_reg = 0x0101,
	.hflip_reg_bit = 0,

	.exposure_reg = 0x0202,
	.exposure_reg_num_bits = 16,

	.vts_reg = 0x0340,
	.vts_reg_num_bits = 16,

	.gain_reg = 0x0204,
	.gain_reg_num_bits = 10,
};

#endif
